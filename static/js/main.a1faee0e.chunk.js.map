{"version":3,"sources":["config.js","services/Pixabay.js","components/Searchbar/index.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/index.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/index.js","components/ImageGallery/ImageGallery.js","components/Loader/index.js","components/Loader/Loader.js","components/Modal/index.js","components/Modal/Modal.js","components/Button/index.js","components/Button/Button.js","components/App/index.js","components/App/App.js","index.js"],"names":["Pixabay","baseUrl","api","q","page","key","config","image_type","orientation","per_page","_transformResourse","items","reduce","prettyArray","webformatURL","largeImageURL","push","getResourse","a","async","query","Object","entries","acc","value","sing","axios","get","res","data","result","hits","console","error","Error","resetApi","nextPage","prevResult","concat","Searchbar","state","input","handlerInput","e","setState","target","handlerSubmit","preventDefault","onSubmit","props","this","className","type","autoComplete","placeholder","onChange","Component","ImageGalleryItem","image","onClick","role","src","alt","ImageGallery","images","selectImage","imageItems","map","item","length","Loader","children","load","loader","clas","color","height","width","Modal","handlerLoad","clearImage","onLoad","Button","App","pixabay","find","select","prevImages","loading","window","scrollTo","top","document","documentElement","scrollHeight","behavior","submitSearchbar","prevProps","prevState","imagesLength","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a1faee0e.chunk.js","sourcesContent":["export default {\n  id: '14899095-5998dc2cbeb0e1f3fce4bf75e',\n};\n","/* eslint-disable no-underscore-dangle */\nimport axios from 'axios';\nimport config from '../config';\n\nexport default class Pixabay {\n  baseUrl = 'https://pixabay.com/api';\n\n  api = {\n    // What find?\n    q: 'forest',\n    // Page number. Default 1\n    page: 1,\n    // Privat key\n    key: config.id,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    // Hom much item for one request\n    per_page: 12,\n  };\n\n  /**\n   *\n   * @param {Array} items big request array\n   * @return {Array} pretty array to work in other components\n   */\n  _transformResourse = items => {\n    return items.reduce((prettyArray, { webformatURL, largeImageURL }) => {\n      prettyArray.push({\n        webformatURL,\n        largeImageURL,\n      });\n      return prettyArray;\n    }, []);\n  };\n\n  /**\n   * Get images\n   *\n   * @param {string | null} q what need to find\n   * @param {number} page pagination\n   * @return {Array} [] if not find or array images\n   */\n  getResourse = async (q = null, page = 0) => {\n    const { api, baseUrl, _transformResourse } = this;\n    if (q !== null) api.q = q;\n    if (page) api.page = page;\n\n    // Nothing to find\n    if (!api.q) return [];\n\n    // Create query string\n    const query = Object.entries(api).reduce((acc, [key, value]) => {\n      const sing = (acc && '&') || '?';\n\n      return `${acc}${sing}${key}=${value}`;\n    }, '');\n\n    // for axios\n    try {\n      // const res = await fetch(baseUrl + query, { method: 'GET' });\n      const res = await axios.get(baseUrl + query);\n\n      // for fetch\n      /*\n        if (!res.ok) {\n          throw new Error('Could not fetch');\n        }\n        */\n\n      // for fetch\n      // const result = await res.json();\n      const result = await res.data;\n\n      return _transformResourse(result.hits);\n    } catch (e) {\n      console.error(e);\n      throw new Error('Could not fetch');\n    }\n  };\n\n  /**\n   * Reset to default params\n   */\n  resetApi = () => {\n    const { api } = this;\n    api.q = '';\n    api.page = 1;\n\n    return true;\n  };\n\n  /**\n   * Get resource for next page\n   * @return {Array} [] if not find or array images\n   */\n  nextPage = async (prevResult = []) => {\n    const { api, getResourse } = this;\n    api.page += 1;\n\n    const result = await getResourse();\n    return prevResult.concat(result);\n  };\n}\n","import Searchbar from './Searchbar';\n\nexport default Searchbar;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Searchbar.css';\n\nexport default class Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  state = {\n    input: '',\n  };\n\n  handlerInput = e => {\n    this.setState({\n      input: e.target.value,\n    });\n  };\n\n  handlerSubmit = e => {\n    e.preventDefault();\n    const { input } = this.state;\n    const { onSubmit } = this.props;\n\n    onSubmit(input);\n  };\n\n  render() {\n    const { input } = this.state;\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handlerSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            placeholder=\"Search images and photos\"\n            value={input}\n            onChange={this.handlerInput}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import ImageGalleryItem from './ImageGalleryItem';\n\nexport default ImageGalleryItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ image, onClick }) => {\n  return (\n    <li className=\"ImageGalleryItem\" onClick={onClick} role=\"presentation\">\n      <img src={image} alt={image} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  image: PropTypes.string.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import ImageGallery from './ImageGallery';\n\nexport default ImageGallery;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nimport './ImageGallery.css';\n\nconst ImageGallery = ({ images, selectImage }) => {\n  const imageItems = images.map(item => {\n    const { webformatURL } = item;\n\n    return (\n      <ImageGalleryItem\n        key={webformatURL}\n        image={webformatURL}\n        onClick={() => selectImage(item)}\n      />\n    );\n  });\n\n  const { length } = imageItems;\n  return (\n    <>\n      {(length && <ul className=\"ImageGallery\">{imageItems}</ul>) || (\n        <div className=\"no-found\">No images</div>\n      )}\n    </>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  selectImage: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import Loader from './Loader';\n\nexport default Loader;\n","import React from 'react';\nimport Spiner from 'react-loader-spinner';\nimport PropTypes from 'prop-types';\n\nimport './Loader.css';\n\nconst Loader = ({ children, load }) => {\n  const loader = (\n    <div className=\"Loader\">\n      <Spiner clas type=\"Grid\" color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n\n  return (\n    <>\n      {children}\n      {load && loader}\n    </>\n  );\n};\n\nLoader.propTypes = {\n  children: PropTypes.node.isRequired,\n  load: PropTypes.bool.isRequired,\n};\n\nexport default Loader;\n","import Modal from './Modal';\n\nexport default Modal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Loader from '../Loader';\n\nimport './Modal.css';\n\nexport default class Modal extends Component {\n  static propTypes = {\n    image: PropTypes.shape({\n      largeImageURL: PropTypes.string,\n    }).isRequired,\n    clearImage: PropTypes.func.isRequired,\n  };\n\n  state = {\n    load: true,\n  };\n\n  handlerLoad = () => {\n    this.setState({\n      load: false,\n    });\n  };\n\n  render() {\n    const { load } = this.state;\n    const {\n      image: { largeImageURL },\n      clearImage,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Overlay\"\n        role=\"presentation\"\n        onClick={() => clearImage(null)}\n      >\n        <div className=\"Modal\">\n          <Loader load={load}>\n            <img\n              src={largeImageURL}\n              alt={largeImageURL}\n              onLoad={this.handlerLoad}\n            />\n          </Loader>\n        </div>\n      </div>\n    );\n  }\n}\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './Button.css';\n\nconst Button = ({ nextPage }) => {\n  return (\n    <button className=\"Button\" type=\"button\" onClick={nextPage}>\n      Load more\n    </button>\n  );\n};\nButton.propTypes = {\n  nextPage: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import App from './App';\n\nexport default App;\n","/* eslint-disable no-alert */\nimport React, { Component } from 'react';\n\nimport Pixabay from '../../services/Pixabay';\nimport Searchbar from '../Searchbar';\nimport ImageGallery from '../ImageGallery';\nimport Modal from '../Modal';\nimport Button from '../Button';\nimport Loader from '../Loader';\n\nimport './App.css';\n\nexport default class App extends Component {\n  pixabay = new Pixabay();\n\n  state = {\n    find: '',\n    images: [],\n    select: null,\n    load: false,\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { find } = this.state;\n    if (prevState.find === find) return false;\n\n    const { pixabay, loading } = this;\n\n    loading(true);\n\n    window.scrollTo({\n      top: 0,\n      behavior: 'smooth',\n    });\n\n    const images = await pixabay.getResourse(find);\n\n    // eslint-disable-next-line react/no-did-update-set-state\n    this.setState({\n      images,\n      select: null,\n    });\n\n    loading(false);\n\n    return true;\n  }\n\n  nextPage = async () => {\n    const { images: prevImages } = this.state;\n    const { pixabay, loading } = this;\n\n    loading(true);\n\n    const images = await pixabay.nextPage(prevImages);\n\n    this.setState({\n      images,\n    });\n\n    loading(false);\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  loading = load => {\n    this.setState({\n      load,\n    });\n  };\n\n  submitSearchbar = find => {\n    this.setState({\n      find,\n    });\n  };\n\n  selectImage = select => {\n    this.setState({\n      select,\n    });\n  };\n\n  render() {\n    const { images, select, load } = this.state;\n    const { submitSearchbar, selectImage, nextPage } = this;\n\n    const imagesLength = images.length > 0;\n    return (\n      <>\n        <Searchbar onSubmit={submitSearchbar} />\n        <Loader load={load}>\n          <ImageGallery images={images} selectImage={selectImage} />\n        </Loader>\n        {imagesLength && <Button nextPage={nextPage} />}\n        {select && <Modal image={select} clearImage={selectImage} />}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}